magrittr::set_colnames("count") %>%
mutate (count = count - 1)
counts2 <- cbind (names, counts)
#all_data2 %>% filter (is.na(name))
#all_data2 %>% filter (!is.na(suffix) & is.na(name)) #2690 people have a suffix
#Join all state dataframes into one frame
all_data2 <- bind_rows (ar_state, ca_state, co_state, ct_state, fl_state, hi_state, ia_state, il_state, in_state, ky_state, la_state, ma_state, me_state, mn_state, mi_state, mn_state, ms_state, mt_state, ne_state, nh_state, nj_state, nm_state, nc_state, oh_state, ok_state, or_state, pa_state, sc_state, tn_state, tx_state, vt_state, va_state, wv_state, wy_state) %>%
#Create name column for those without
mutate (name = case_when (
is.na(name) & !is.na(suffix) & is.na (middle_name) ~ paste (first_name, last_name, suffix),
is.na(name) & is.na(suffix) & is.na (middle_name) ~ paste (first_name, last_name),
is.na(name) & !is.na(suffix) & !is.na (middle_name) ~ paste (first_name, middle_name, last_name, suffix),
is.na(name) & is.na(suffix) & !is.na (middle_name) ~ paste (first_name, middle_name, last_name),
!is.na(name) ~ name),
#Copy process time into process_time2 for those states where it wasn't needed
process_time2 = if_else (data_state %in% c("AR", "IL", "KY", "ME", "MN", "MS", "NC", "OR", "SC", "TN", "TX", "VA", "WY"), process_time, process_time2)) %>%
#Rearrange columns, leaving out process_time
select (data_state, lic_type, app_type, name, city, state, process_time2, month, year, application_date, docs_date, issue_date, effective_renewal_date, expiration_date, gather_time, docs_time, app_status, lic_status, license_number, duration, app_month, app_year, app_expiration_date, first_name, middle_name, last_name, suffix, maiden_name, address_line1, address_line2, zip_code, county, date_of_birth, gender, ethnicity, phone, email, school_name, graduation_date, highest_education_level, prelicensure_education_preparation, state_of_original_license, deficient)
#all_data2 %>% filter (process_time != process_time2)
all_data2 %>% count (app_type)
all_data2 %>%
filter (process_time2 < 0) %>%
#count (lic_type, app_type) %>%
filter (!(str_detect(app_type, "^Renewal")|str_detect(app_type, "^Reinstatement"))) #%>%
#arrange (desc(n))
nrow(all_data2 %>% filter (process_time2 < 0) %>%
filter ((str_detect(app_type, "^Renewal")|str_detect(app_type, "^Reinstatement")))) / nrow(all_data2)
nrow(all_data2 %>% filter (process_time2 < 0) %>%
filter (!(str_detect(app_type, "^Renewal")|str_detect(app_type, "^Reinstatement")))) / nrow(all_data2)
all_data2 %>%
filter (is.na(process_time2)) %>%
#count (data_state)
count (lic_type, app_type) %>%
arrange (desc(n)) %>%
adorn_totals()
nrow(all_data2 %>% filter (is.na(process_time2))) / nrow(all_data2)
all_data2 %>%
filter (process_time2 > -1) %>%
filter (year != "2022") %>% #remove 266 errors
filter (!(str_detect(year, "^Pending"))) #%>% #remove all pending apps
#filter (!(str_detect(year, "^Pending") & (application_date < as.Date("2020-07-01")))) #%>% #remove pending apps older than July 2020 (11789 RNs & 1994 LPNs) %>%
#  count (year)
#Louisiana has 258 records missing application dates that didn't calculate, rest of NAs are pending
all_data2 %>%
filter (is.na(process_time2) & year %in% c("2019", "2020", "2021")) %>%
count (data_state)
#266 records (almost all NM) wrongly have 2022 issue dates, 244 renewals - plus CA which provided some records into 2022
all_data2 %>%
filter (year=="2022") #%>%
#  count (app_type)
#CT has 5 records of unknown license/application type
all_data2 %>%
filter (lic_type=="Unknown")
#2,032,084 records for Jan. 1, 2019 - Sept. 23, 2021
filtered_data <- all_data2 %>%
filter (application_date <= as.Date("2021-09-23")) %>%
filter (issue_date <= as.Date("2021-09-23")) %>%
#Standardize 29 app types to simplest version
mutate (standard_app_type = case_when(
str_detect(app_type, "Reinstatement") ~ "Reinstatement",
str_detect(app_type, "Renewal") ~ "Renewal",
str_detect(lic_type, "Provisional") ~ "Temporary",
str_detect(lic_type, "Temp") ~ "Temporary",
lic_type=="Volunteer RN" ~ "Temporary", #for 22 records in PA
str_detect(app_type, "Endorsement") ~ "Endorsement",
str_detect(app_type, "Exam-retest") ~ "Exam-retest",
str_detect(app_type, "Exam") ~ "Exam",
app_type %in% c("Foreign Applicant", "Inactive", "SSL to MSL", "International", "Military Vet Expedited Initial Licensure") ~ "Other",
TRUE ~ app_type))
#How many processing times are negative and will be removed?
#553214 records
filtered_data %>% filter (process_time2 < 0) %>% nrow()
#Where are these from and what types of applications?
#Majority are renewals (525793);
#3125 are Exam
#2787 are Endorsement
filtered_data %>% filter (process_time2 < 0) %>% count(standard_app_type) %>%
adorn_totals("row")
#Four application types NPR is analyzing = 226,304 new licenses issued in 2021
#Adding Florida: 253,694
filtered_data %>%
filter (year=="2021" & standard_app_type %in% c("Exam", "Endorsement", "Other", "Unknown")) %>%
count(standard_app_type) %>%
adorn_totals("row")
#How many of these had negative process times that were removed from 2021's data?
#Just 77 licenses from six states
filtered_data %>%
filter (year=="2021" & standard_app_type %in% c("Exam", "Endorsement", "Other", "Unknown") & process_time2 < 0) %>%
count(standard_app_type, data_state) %>%
adorn_totals("row")
#How many processing times are NA and will be removed?
#NONE
filtered_data %>%
filter (is.na(process_time2)) %>%
nrow()
#Original method to filter down dataset, keeps pending applications
valid_data <- all_data2 %>%
filter (process_time2 > -1) %>% #Keep only valid processing times
filter (!is.na(process_time2)) %>%
filter (year != "2022") %>% #remove 266 errors and those issued in NC/TN
#remove pending apps older than July 2020 (11789 RNs & 1994 LPNs)
filter (!(str_detect(year, "^Pending") & (application_date < as.Date("2020-12-31")))) #"2020-07-01"
#639,067 records removed (NA + negative)
nrow(all_data2)-nrow(valid_data)
valid_data %>% count (app_type)
#Standardize 30+ app types to simplest version - 8 types
valid_data2 <- valid_data %>%
mutate (standard_app_type = case_when(
str_detect(app_type, "Reinstatement") ~ "Reinstatement",
str_detect(app_type, "Renewal") ~ "Renewal",
str_detect(lic_type, "Provisional") ~ "Temporary",
str_detect(lic_type, "Temp") ~ "Temporary",
lic_type=="Volunteer RN" ~ "Temporary", #for 22 records in PA
str_detect(app_type, "Endorsement") ~ "Endorsement",
str_detect(app_type, "Exam-retest") ~ "Exam-retest",
str_detect(app_type, "Exam") ~ "Exam",
app_type %in% c("Foreign Applicant", "Inactive", "SSL to MSL", "International", "Military Vet Expedited Initial Licensure") ~ "Other",
TRUE ~ app_type))
#Double check standardization
valid_data2 %>%
count (lic_type, app_type, standard_app_type)
#Double check standardization
valid_data2 %>%  count (standard_app_type)
#What is the breakdown by license type and application type?
valid_data2 %>%
filter (!(#str_detect(app_type, "Exam-retest")|
str_detect(app_type, "Renewal")|
str_detect(app_type, "Reinstatement"))) %>%
mutate (year = if_else (str_detect(year, "^Pending"), "Pending", year)) %>%
filter (year %in% c("2021", "Pending")) %>%
count (year, lic_type)
#Where are the unknown application types from?
valid_data2 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state) %>%
arrange (desc(n))
#Unknowns are from CT + VA, which didn't specify application_type, plus 3600 pending applications from MI, which weren't specified. Also includes: 5 from PA, 4 from CO
#What are the ranges of application dates and issue dates for each state's data?
valid_data2 %>%
group_by (data_state) %>%
summarize (apps = range(application_date),
lics = range(issue_date, na.rm=T)) %>%
mutate (id = if_else (row_number()==1, "start", "end")) %>%
pivot_wider (names_from = c(id),
values_from = c(apps, lics)) %>%
arrange ((lics_end))
#How many still-pending applications are in full data? >> #118,255
valid_data %>%
filter (str_detect (year, "^Pending")) %>%
nrow()
#Remove any applications after Sept. 23, 2021 >> 78027
valid_data2 <- valid_data2 %>%
filter (application_date <= as.Date("2021-09-23"))
nrow(valid_data)-nrow(valid_data2)
#How many still-pending applications who applied before Sept. 23 are in this filtered data? >> #82948
valid_data2 %>%
filter (str_detect (year, "^Pending")) %>%
nrow()
#Filter out licenses issued after Sept. 23, keeping pending applications
valid_data3 <- valid_data2 %>%
filter (!(year %in% c("2019", "2020", "2021") & issue_date > as.Date("2021-09-23"))) %>%
#Mark that CA + VA redacted names
#Mark that NH redacted nurses' city/state
mutate (name = if_else (data_state %in% c("CA", "VA"), "REDACTED", name),
city = if_else (data_state == "NH", "REDACTED", city),
state = if_else (data_state == "NH", "REDACTED", state))
#removes 105534 total records, to end up with 1,561,710 records. Some overlap if nurses applied and were issued after Sept. 23)
nrow(valid_data)-nrow(valid_data3)
#How many still-pending applications who applied before Sept. 23 remain in this filtered data? >> #82948, so none were lost
valid_data3 %>%
filter (str_detect (year, "^Pending")) %>%
nrow()
#write_csv(valid_data, "../output/nurse_licenses_all_2019_2021.csv")
valid_data21 <- valid_data3 %>%
filter (!(year %in% c("2019", "2020"))) %>%
arrange (data_state, lic_type, app_type, desc(process_time2)) %>%
select (1:3, standard_app_type, 4:44)
valid_data21 %>%
count (year)
valid_data21_issued <- valid_data21 %>%
filter (year=="2021")
valid_data21_pending <- valid_data21 %>%
filter (str_detect(year, "^Pending"))
write_csv (valid_data21_issued, "../output/nurse_licenses_issued_2021.csv")
write_csv (valid_data21_pending, "../output/nurse_licenses_pending_2021.csv")
#Break down by state, license type, application type, and year.
state_averages <- valid_data3 %>%
group_by (data_state, lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#pending_counts <- state_averages %>%
#  filter (str_detect(year, "^Pending")) %>%
#  mutate (year = if_else(data_state=="CA", "Pending as of 01/04/22", year))
#write_csv (pending_counts, "Pending_counts_by_state.csv")
#Break down new licenses, separating by RN and LPN only (and by state and year).
#Removes exam-retest, reinstatements, renewals
state_avg_lic_type_only <- valid_data3 %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (standard_app_type %in% c("Endorsement", "Exam", "Other", "Unknown")) %>%
mutate (standard_app_type = "Endorsement+Exam+Other+Unknown") %>%
group_by (data_state, lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Break down new licenses, separating by application type only (and by state and year).
#Removes exam-retest, reinstatements, renewals
state_avg_app_type_only <- valid_data3 %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (standard_app_type %in% c("Endorsement", "Exam", "Other", "Unknown")) %>%
mutate (lic_type = "LPN+RN") %>%
group_by (data_state, lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Calculate state totals for 2021, combining all new RN/LPN licenses who applied through endorsement, exam, other and unknown (CT/VA).
#Removes exam-retest, reinstatements, renewals
state_averages_combined <- valid_data3 %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (standard_app_type %in% c("Endorsement", "Exam", "Other", "Unknown")) %>%
mutate (lic_type = "LPN+RN",
standard_app_type = "Endorsement+Exam+Other+Unknown") %>%
group_by (data_state, lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Write summary files
write_csv (state_averages, "../output/state_averages_by_app_lic_type.csv")
write_csv (state_avg_lic_type_only, "../output/state_averages_lic_type_only.csv")
write_csv (state_avg_app_type_only, "../output/state_averages_app_type_only.csv")
write_csv (state_averages_combined, "../output/state_averages_combined.csv")
state_averages_combined %>%
filter (year=="2021") %>%
arrange (desc(pct_over90days))
avg_counts <- state_averages %>%
ungroup() %>%
filter (year=="2021") %>%
group_by (lic_type, standard_app_type) %>%
summarize (count = sum(count))
avg_counts %>%
ungroup() %>%
filter (lic_type %in% c("RN", "LPN") & standard_app_type %in% c("Endorsement", "Exam", "Other", "Unknown")) %>%
summarize (total = sum(count))
valid_data3 %>%
ungroup() %>%
filter (year=="2021") %>%
filter (lic_type %in% c("RN", "LPN") & standard_app_type %in% c("Endorsement", "Exam", "Other", "Unknown")) %>%
summarize (total = n())
#Break down by license type, application type and year
natl_averages <- valid_data3 %>%
mutate (year = if_else (str_detect(year, "^Pending"), "Pending", year)) %>%
group_by (lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
min = min(process_time2),
max = max(process_time2),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Nationally, it's taking about six days longer (median) to get an RN by examination than last year and three days longer for RN by endorsement.
natl_comparison <- natl_averages %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (year %in% c("2020", "2021")) %>%
pivot_wider (id_cols = c(lic_type, standard_app_type),
names_from = year,
values_from = c(mean, median, count, min, max)) %>%
arrange (standard_app_type) %>%
mutate (change_med = median_2021 - median_2020)
#natl_averages2 <- natl_avg_lic_type
#What about for new licenses only, grouped into LPN + RN?
natl_avg_lic_type <- valid_data3 %>%
mutate (year = if_else (str_detect(year, "^Pending"), "Pending", year)) %>%
filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
group_by (lic_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Nationally, RN licenses are taking 5 days longer and LPNs are taking 6 days longer than last year.
natl_comparison2 <- natl_avg_lic_type %>%
#filter (lic_type %in% c("LPN", "RN")) %>%
filter (year %in% c("2020", "2021")) %>%
pivot_wider (id_cols = c(lic_type),
names_from = year,
values_from = c(mean, median, count)) %>%
#arrange (standard_app_type) %>%
mutate (change_med = median_2021 - median_2020)
#Percent of new licenses issued that took longer than a month increased from 78% in 2020 to 80% in 2021.
#Percent of new licenses issued that took longer than 2 months increased from 53% in 2020 to 57% in 2021.
#Percent of new licenses issued that took longer than 3 months increased from 31% in 2020 to 35% in 2021.
#What about for all new RN/LPN licenses, grouping exam, endorsement, other and unknown together?
#app_types: Unknown is mostly CT/VA, which didn't specify application type
natl_averages_combined <- valid_data3 %>%
mutate (year = if_else (str_detect(year, "^Pending"), "Pending", year)) %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
group_by (year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Group by application type only
#app_types: Unknown is mostly CT/VA, which didn't specify application type
natl_avg_app_type_only <- valid_data3 %>%
mutate (year = if_else (str_detect(year, "^Pending"), "Pending", year)) %>%
filter (lic_type %in% c("LPN", "RN")) %>%
filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
mutate (lic_type = "LPN+RN") %>%
group_by (lic_type, standard_app_type, year) %>%
summarize (mean = round(mean(process_time2)),
median = median (process_time2),
count = n(),
count_over30days = sum(process_time2 > 30),
pct_over30days = count_over30days/count,
count_over60days = sum(process_time2 > 60),
pct_over60days = count_over60days/count,
count_over90days = sum(process_time2 > 90),
pct_over90days = count_over90days/count,
count_over120days = sum(process_time2 > 120),
pct_over120days = count_over120days/count,
count_over180days = sum(process_time2 > 180),
pct_over180days = count_over180days/count,
count_over1year = sum(process_time2 > 365),
pct_over1year = count_over1year/count) %>%
filter (year != "2019")
#Write summary files
write_csv (natl_averages, "../output/natl_averages_by_app_lic_type.csv")
write_csv (natl_avg_lic_type, "../output/natl_averages_lic_type_only.csv")
write_csv (natl_avg_app_type_only, "../output/natl_averages_app_type_only.csv")
write_csv (natl_averages_combined, "../output/natl_averages_combined.csv")
end_time <- Sys.time()
paste ("Processing time lasted", (end_time-start_time))
View(valid_data3)
valid_data3 %>%
count (app_type)
valid_data3 %>%
count (standard_app_type)
View(fl_state)
valid_data21 %>%
count (standard_app_type)
valid_data21_issued %>%
count (standard_app_type)
valid_data21_issued %>%
count (lic_type, standard_app_type)
valid_data21_issued %>%
count (lic_type, standard_app_type)
valid_data21_issued %>%
count (lic_type, standard_app_type) %>%
print (1e3)
valid_data21_issued %>%
count (standard_app_type) %>%
print (1e3)
View(state_avg_lic_type_only)
#How many of each application type were issued in 2021?
valid_data3 %>%
filter (year %in% c("2020", "2021")|str_detect(year, "^Pending")) %>%
count (standard_app_type) %>%
print (1e3)
#Where do "Other" applications come from?
valid_data3 %>%
filter (standard_app_type=="Other") %>%
count (data_state) %>%
arrange (desc(n))
#Where do "Other" applications come from? mostly
valid_data3 %>%
filter (standard_app_type=="Other") %>%
count (data_state, app_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, app_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type) %>%
arrange (desc(n))
View(mi_state)
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type, year) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, app_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type) %>%
arrange (desc(n))
valid_data3 %>%
filter (standard_app_type=="Other") %>%
count (data_state, app_type) %>%
arrange (desc(n)) %>%
adorn_totals()
valid_data3 %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type) %>%
arrange (desc(n)) %>%
adorn_totals()
valid_data3 %>%
filter (year %in% c("2021", "2020") | str_detect(year, "^Pending")) %>%
filter (standard_app_type=="Other") %>%
count (data_state, app_type) %>%
arrange (desc(n)) %>%
adorn_totals()
valid_data3 %>%
filter (year %in% c("2021", "2020") | str_detect(year, "^Pending")) %>%
filter (standard_app_type=="Unknown") %>%
count (data_state, lic_type, app_type) %>%
arrange (desc(n)) %>%
adorn_totals()
fl_state %>%
count (lic_type, app_type)
#How many of each application type were issued in 2021?
valid_data21_issued %>%
count (standard_app_type) %>%
print (1e3)
