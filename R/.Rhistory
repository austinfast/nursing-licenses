#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png")
#       )
} else {
#Lousiana only has LPNs, so skip RN graph
if(state=="LA"){
}else{
rn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity')  +
facet_wrap (~ standard_app_type, ncol=1)
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) + #140 to reach max
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0"),
#limits=c(0, 800)
) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "registered nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = rn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-RN.png"),
#width = 6,
#height = 3
#       )
}
#WY/WV only have RNs, so skip RN graph
if (state %in% c("WY", "WV")){
}else{
lpn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("LPN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity', color = "skyblue", fill ="skyblue")  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="LPN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "practical nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print (lpn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png"),
#width = 6,
#height = 3
#       )
}
}
}
#states <- "CT"
#Other states =  "CT", "VA"
for (i in states){
state <- i
#CT/VA don't separate by exam/endorsement, so change here
if (state %in% c("CT", "VA")){
rn_med <- valid_data3 %>%
filter (data_state==state & lic_type=="RN" & standard_app_type=="Unknown") %>%
mutate (median21 = as.numeric(median21) / 7) %>%
pull (median21)
lpn_med <- valid_data3 %>%
filter (data_state==state & lic_type=="LPN" & standard_app_type=="Unknown") %>%
mutate (median21 = as.numeric(median21) / 7) %>%
pull (median21)
#Make RN graph
rn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
#mutate (standard_app_type = "Exam & Endorsement") %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity')  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#Add RN median
geom_vline(data = subset(weeks_to_license, standard_app_type == "Unknown"), aes(xintercept = rn_med)) +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "registered nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = rn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-RN.png"),
#width = 6,
#height = 3
#       )
lpn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("LPN")) %>% #"LPN",
#mutate (standard_app_type = "Exam & Endorsement") %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity', color = "skyblue", fill ="skyblue")  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = subset(weeks_to_license, standard_app_type == "Unknown"), aes(xintercept = lpn_med)) +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "practical nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print (lpn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png")
#       )
} else {
#Lousiana only has LPNs, so skip RN graph
if(state=="LA"){
}else{
rn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity')  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) + #140 to reach max
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0"),
#limits=c(0, 800)
) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "registered nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = rn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-RN.png"),
#width = 6,
#height = 3
#       )
}
#WY/WV only have RNs, so skip RN graph
if (state %in% c("WY", "WV")){
}else{
lpn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("LPN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity', color = "skyblue", fill ="skyblue")  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="LPN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Months from application to licensure",
y="Count of applicants",
title=paste(state, "practical nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print (lpn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png"),
#width = 6,
#height = 3
#       )
}
}
}
#Create stacked chart like Connie's
rn_graph <- ca_weeks_to_license4 %>%
#filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
arrange (standard_app_type, deficient, week_count) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=standard_app_type)) +
geom_bar(stat='identity', position='stack') +
facet_wrap (~ deficient, ncol=1, scales='free',
labeller = label_wrap_gen(multi_line=FALSE)) +
# scale_x_continuous(breaks=c(0,30, 60, 90, 120)) +
scale_x_continuous(breaks=seq(0, 52, by = 4), #(365 / 7 / 12))
#                   labels=as.character(seq(0, 12, by = 1)),
limits=c(-0.5, 52)) +
#Add padding so they appear equal width
scale_y_continuous(breaks=seq(0,850, by = 200),#900 Jan-sept #1500 fullyear
limits=c(0,850)
#labels = function(x) stringr::str_pad(x, width = 4, pad = "0")
) +
#Add median lines
geom_vline(data = (ca_weeks_to_license5 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline(data = (ca_weeks_to_license5 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = mean_weeks), color="steelblue", linetype="twodash") +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Weeks from application to licensure",
y="Count of licensees",
title=paste("New registered nurse licenses issued in CA in 2021"),
fill = "Application Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: California Board of Registered Nursing\nVertical lines represent that group's median processing time.") +#\nIncludes licenses issued Jan. 1 to Sept. 23, 2021.") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "right")
print(rn_graph)
#Create graphic (Jan. 1-Sept. 23)
rn_graph <- ca_weeks_to_license4 %>%
#filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
arrange (standard_app_type, deficient, week_count) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=standard_app_type)) +
geom_bar(stat='identity')  +
facet_wrap (deficient ~ standard_app_type, ncol=2, scales='free',
labeller = label_wrap_gen(multi_line=FALSE)) +
# scale_x_continuous(breaks=c(0,30, 60, 90, 120)) +
scale_x_continuous(breaks=seq(0, 53, by = (365 / 7 / 12)), #4.34523
labels=as.character(seq(0, 12, by = 1)),
limits=c(-0.01, 53)) +
#Add padding so they appear equal width
scale_y_continuous(breaks=seq(0, 900, by = 150),
limits=c(0,900)
#labels = function(x) stringr::str_pad(x, width = 4, pad = "0")
) +
#Add median lines
geom_vline(data = (ca_weeks_to_license5 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline(data = (ca_weeks_to_license5 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = mean_weeks), color="steelblue", linetype="twodash") +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Months from application to licensure",
y="Count of licensees",
title=paste("New registered nurse licenses issued in CA in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: California Board of Registered Nursing\nVertical lines represent that group's median processing time.\nIncludes licenses issued Jan. 1 to Sept. 23, 2021.") +#\nIncludes licenses issued Jan. 1 to Sept. 23, 2021.") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
pa_graph <- pa_weeks_to_license %>%
#filter (data_state==state) %>%
#filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
arrange (standard_app_type, week_count) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = licensee_count, group=lic_type, fill=standard_app_type)) +
geom_bar(stat='identity', position='stack') +
facet_wrap (~ lic_type, ncol=1, scales='free',
labeller = label_wrap_gen(multi_line=FALSE)) +
# scale_x_continuous(breaks=c(0,30, 60, 90, 120)) +
scale_x_continuous(
breaks=seq(0, 52, by = 4), #(365 / 7 / 12))
#                   labels=as.character(seq(0, 12, by = 1)),
limits=c(-0.5, 52)) +
#Add padding so they appear equal width
scale_y_continuous(breaks=seq(0,850, by = 200),#900 Jan-sept #1500 fullyear
limits=c(0,850)
#labels = function(x) stringr::str_pad(x, width = 4, pad = "0")
) +
#Add median lines
geom_vline(data = (pa_weeks_to_license2 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline(data = (ca_weeks_to_license5 %>% filter (lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = mean_weeks), color="steelblue", linetype="twodash") +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Weeks from application to licensure",
y="Count of licensees",
title=paste("New registered nurse licenses issued in PA in 2021"),
fill = "Application Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: California Board of Registered Nursing\nVertical lines represent that group's median processing time.") +#\nIncludes licenses issued Jan. 1 to Sept. 23, 2021.") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "right")
print(pa_graph)
#Save states to list
states=(ls() %>% as.data.frame() %>% filter (str_detect(., "_state$")) %>% pull() %>% str_remove_all("_state") %>% str_to_upper())
#states <- str_to_upper(c("ar", "co", "hi", "ia", "il", "in", "ky", "ma", "me", "mi", "mn", "ms", "mt", "ne", "nh", "nj", "nm", "oh", "ok", "or", "pa", "sc", "tx", "vt", "LA", "WY", "WV", "CT", "VA", "NC", "CA", "TN"))
#states <- "CT"
#Other states =  "CT", "VA"
for (i in states){
state <- i
#CT/VA don't separate by exam/endorsement, so change here
if (state %in% c("CT", "VA")){
rn_med <- valid_data3 %>%
filter (data_state==state & lic_type=="RN" & standard_app_type=="Unknown") %>%
mutate (median21 = as.numeric(median21) / 7) %>%
pull (median21)
lpn_med <- valid_data3 %>%
filter (data_state==state & lic_type=="LPN" & standard_app_type=="Unknown") %>%
mutate (median21 = as.numeric(median21) / 7) %>%
pull (median21)
#Make RN graph
rn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
#mutate (standard_app_type = "Exam & Endorsement") %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity')  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#Add RN median
geom_vline(data = subset(weeks_to_license, standard_app_type == "Unknown"), aes(xintercept = rn_med)) +
labs(x="Weeks from application to licensure",
y="Count of applicants",
title=paste(state, "registered nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = rn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-RN.png"),
#width = 6,
#height = 3
#       )
lpn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("LPN")) %>% #"LPN",
#mutate (standard_app_type = "Exam & Endorsement") %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity', color = "skyblue", fill ="skyblue")  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = subset(weeks_to_license, standard_app_type == "Unknown"), aes(xintercept = lpn_med)) +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Weeks from application to licensure",
y="Count of applicants",
title=paste(state, "practical nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print (lpn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png")
#       )
} else {
#Lousiana only has LPNs, so skip RN graph
if(state=="LA"){
}else{
rn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("RN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity')  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) + #140 to reach max
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0"),
#limits=c(0, 800)
) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="RN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
labs(x="Weeks from application to licensure",
y="Count of applicants",
title=paste(state, "registered nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print(rn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = rn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-RN.png"),
#width = 6,
#height = 3
#       )
}
#WY/WV only have RNs, so skip RN graph
if (state %in% c("WY", "WV")){
}else{
lpn_graph <- weeks_to_license %>%
filter (data_state==state) %>%
filter (lic_type %in% c("LPN")) %>% #"LPN",
filter (standard_app_type %in% c("Exam", "Endorsement")) %>%
#  filter (standard_app_type == "Exam") %>%
# filter (!(standard_app_type %in% c("Reinstatement", "Renewal", "Exam-retest"))) %>%
ggplot(aes(x = week_count, y = n, group=lic_type, fill=lic_type)) +
geom_bar(stat='identity', color = "skyblue", fill ="skyblue")  +
facet_wrap (~ standard_app_type, ncol=1) +
scale_x_continuous(#breaks=seq(0, 53, by = 4.285714),
breaks=seq(0, 52, by = 4),
#labels=as.character(seq(0, 12, by = 1)),
limits=c(-1, 53)) +
#Add padding so they appear equal width
scale_y_continuous(labels = function(x) stringr::str_pad(x, width = 4, pad = "0")) +
#ADD ALL MEDIANS TO ALL FACETS HERE
geom_vline(data = (valid_data3 %>% filter (data_state == state & lic_type=="LPN" & standard_app_type %in% c("Exam", "Endorsement"))), mapping = aes(xintercept = med_weeks)) +
# geom_vline (xintercept = 90, linetype = "dashed", colour = "black") +
labs(x="Weeks from application to licensure",
y="Count of applicants",
title=paste(state, "practical nurse licenses issued in 2021"),
fill = "Type",
#subtitle="Weeks from application submission to license issuance",
caption="Source: State board of nursing") +
theme(axis.text.x = element_text(angle=60, hjust=1)) +
theme(legend.position = "none")
print (lpn_graph)
#SAVE TO FILE WITH THIS CODE
#ggsave(plot = lpn_graph,
#       file = paste0("/Users/austinfast/Documents/NPR/210908-nursing licenses/Graphs/", state, "-LPN.png"),
#width = 6,
#height = 3
#       )
}
}
}
getwd()
#Set working directory to find data files
setwd('/Users/austinfast/Documents/GitHub/nursing-licenses')
getwd()
#Set working directory to find data files
setwd('/Users/austinfast/Documents/GitHub/nursing-licenses/R/')
getwd9)
getwd()
#Set working directory to find data files
setwd('/Users/austinfast/Documents/GitHub/nursing-licenses/R/')
getwd()
#Set working directory to find data files
setwd('/Users/austinfast/Documents/GitHub/nursing-licenses/R/')
knitr::opts_knit$set(root.dir = '/Users/austinfast/Documents/GitHub/nursing-licenses/R/')
getwd()
knitr::opts_knit$set(root.dir = rprojroot::find_rstudio_root_file())
setwd('/Users/austinfast/Documents/GitHub/nursing-licenses/R/')
getwd()
